type Query {
    # member(memberID: ID!): MemberSubscription
    memberFamily(contractId: ID, memberId: ID): FamilySubscription
    memberSearch(firstName: String!, lastName: String!, dateOfBirth: Date!, networkId: ID!): [MemberSubscription]
    # memberSearchWithSSN(dateOfBirth: Date!, ssn: String!, networkId: ID!): MemberSubscription
    # memberSearchWithMemberId(dateOfBirth: Date!, memberId: ID!, networkId: ID!): MemberSubscription
}

"""
ISO 8601 String representing a date.
"""
scalar Date

enum CoverageType {
    DF
}

type Coverage {
    effectiveDate: Date!
    endDate: Date!
    groupLevel3: String
    groupLevel4: String
    coverageType: CoverageType
    rateCode: Int
    termReasonCode: String
}

enum Role {
    SUBSCRIBER
    SPOUSE
    CHILD
}

type Identifier {
    name: String!
    value: String!
    effectiveDate: Date!
    endDate: Date!
}

type Member {
    memberId: ID!
    identifiers(name: String!): [Identifier!]!
    role: Role!
    firstName: String
    lastName: String
    suffix: String
    title: String
    dateOfBirth: Date
}

type FamilySubscription {
    subscriber: Member!
    dependents: [Member]
    coverages: [Coverage!]!
}

type MemberSubscription {
    member: Member!
    coverages: [Coverage!]!
}
